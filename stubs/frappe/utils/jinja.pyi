from jinja2 import Environment
from jinja2.sandbox import SandboxedEnvironment
from typing import Any, Dict, Optional, Tuple

class FrappeSandboxedEnvironment(SandboxedEnvironment):
    def is_safe_attribute(
        self, obj: Any, attr: str, *args: Any, **kwargs: Any
    ) -> bool: ...

def get_jenv() -> Environment: ...
def get_template(path: str) -> Any: ...
def get_email_from_template(
    name: str, args: Optional[Dict[str, Any]] = None
) -> Tuple[str, Optional[str]]: ...
def validate_template(html: str) -> None: ...
def render_template(
    template: str,
    context: Optional[Dict[str, Any]] = None,
    is_path: Optional[bool] = None,
    safe_render: bool = True,
) -> str: ...
def guess_is_path(template: str) -> bool: ...
def get_jloader() -> Any: ...
def set_filters(jenv: Environment) -> None: ...
def get_jinja_hooks() -> Tuple[Optional[Dict[str, Any]], Optional[Dict[str, Any]]]: ...
