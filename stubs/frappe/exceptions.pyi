"""
This type stub file was generated by pyright.
"""

import typing

class _ExceptionWordUnicodeSet:
    ...


class ParseBaseException(Exception):
    loc: int
    msg: str
    pstr: str
    parser_element: typing.Any
    args: tuple[str, int, typing.Optional[str]]
    def __init__(self, pstr: str, loc: int = ..., msg: typing.Optional[str] = ..., elem: typing.Any = ...) -> None:
        ...
    
    @staticmethod
    def explain_exception(exc: Exception, depth: int = ...) -> str:
        ...
    
    @property
    def line(self) -> str:
        ...
    
    @property
    def lineno(self) -> int:
        ...
    
    @property
    def col(self) -> int:
        ...
    
    @property
    def column(self) -> int:
        ...
    
    @property
    def found(self) -> str:
        ...
    
    @property
    def parserElement(self) -> typing.Any:
        ...
    
    @parserElement.setter
    def parserElement(self, elem: typing.Any) -> None:
        ...
    
    def copy(self) -> ParseBaseException:
        ...
    
    def formatted_message(self) -> str:
        ...
    
    def __str__(self) -> str:
        ...
    
    def __repr__(self) -> str:
        ...
    
    def mark_input_line(self, marker_string: typing.Optional[str] = ..., *, markerString: str = ...) -> str:
        ...
    
    def explain(self, depth: int = ...) -> str:
        ...
    
    markInputline: typing.Any


class ParseException(ParseBaseException):
    ...


class ParseFatalException(ParseBaseException):
    ...


class ParseSyntaxException(ParseFatalException):
    ...


class RecursiveGrammarException(Exception):
    parseElementTrace: typing.Any
    def __init__(self, parseElementList: typing.Any) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    


